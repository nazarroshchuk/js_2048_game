{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","winLimit","startedGame","startGame","setGame","createMessage","resetGame","forEach","el","fill","document","querySelector","innerText","querySelectorAll","cell","remove","createButton","title","className","button","createElement","classList","add","addEventListener","append","r","c","id","toString","updateCell","getElementById","setTwo","hasEmptyCell","found","Math","floor","random","length","num","value","slideLeft","row","slide","slideRigth","reverse","slideUp","slideDown","filterZero","i","push","isMergingRow","filter","canBeMergedVerticaly","arr","result","col","b","some","canBeMergedHorisontaly","message","isWinner","map","w","e","code"],"mappings":";AAAA,aAEA,IAAIA,EAAQ,GACRC,EAAQ,EACNC,EAAO,EACPC,EAAU,EACVC,EAAW,KACbC,GAAc,EAIlB,SAASC,IACHD,IAGJE,IACAC,EAAc,GAAI,UAClBH,GAAc,GAGhB,SAASI,IACPT,EAAMU,QAAQ,SAAAC,GAAMA,OAAAA,EAAGC,KAAK,EAAG,EAAG,KAClCX,EAAQ,EACRY,SAASC,cAAc,eAAeC,UAAYd,EAEpCY,SAASG,iBAAiB,cAElCN,QAAQ,SAAAO,GAAQA,OAAAA,EAAKC,WAE3BV,EAAc,0CAA2C,iBACzDW,EAAa,QAAS,SACtBd,GAAc,EAOhB,SAASc,EAAaC,EAAOC,GAC3BR,SAASC,cAAc,WAAWI,SAE5BI,IAAAA,EAAST,SAASU,cAAc,UAEtCD,EAAOE,UAAUC,IAAI,UACrBH,EAAOP,UAAYK,EACnBE,EAAOE,UAAUC,IAAIJ,GAErBC,EAAOI,iBAAiB,QAAuB,YAAdL,EAC7BZ,EACAH,GAEJO,SAASC,cAAc,aAAaa,OAAOL,GAG7C,SAASf,IACPP,EAAQ,CACN,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAGP,IAAA,IAAI4B,EAAI,EAAGA,EAAI1B,EAAM0B,IACnB,IAAA,IAAIC,EAAI,EAAGA,EAAI1B,EAAS0B,IAAK,CAC1BZ,IAAAA,EAAOJ,SAASU,cAAc,cAEpCN,EAAKa,GAAKF,EAAEG,WAAa,IAAMF,EAAEE,WAIjCC,EAAWf,EAFCjB,EAAM4B,GAAGC,IAGrBhB,SAASoB,eAAe,cAAcN,OAAOV,GAIjDiB,IACAA,IAGF,SAASA,IACH,GAACC,IAME,IAFHC,IAAAA,GAAQ,GAEJA,GAAO,CACPR,IAAAA,EAAIS,KAAKC,MAAMD,KAAKE,SAAWrC,GAC/B2B,EAAIQ,KAAKC,MAAMD,KAAKE,SAAWpC,GAEjCH,GAAgB,IAAhBA,EAAM4B,GAAGC,GAAU,CACrB7B,EAAM4B,GAAGC,GAAK,EAERZ,IAAAA,EAAOJ,SAASoB,eAAeL,EAAEG,WAAa,IAAMF,EAAEE,YAE5Dd,EAAKF,UAAY,IACjBE,EAAKO,UAAUC,IAAI,iBACnBW,GAAQ,IAKd,SAASD,IACH,GAACnC,EAAMwC,OAAP,CAIC,IAAA,IAAIZ,EAAI,EAAGA,EAAI1B,EAAM0B,IACnB,IAAA,IAAIC,EAAI,EAAGA,EAAI1B,EAAS0B,IACvB7B,GAAgB,IAAhBA,EAAM4B,GAAGC,GACJ,OAAA,EAKN,OAAA,GAGT,SAASG,EAAWf,EAAMwB,GACxBxB,EAAKF,UAAY,GACjBE,EAAKO,UAAUkB,MAAQ,GACvBzB,EAAKO,UAAUC,IAAI,cAEfgB,EAAM,IACRxB,EAAKF,UAAY0B,EAEbA,EAAMrC,EACRa,EAAKO,UAAUC,IAAI,iBAAuBgB,EAAIV,YAE9Cd,EAAKO,UAAUC,IAAI,qBAmCzB,SAASkB,IACF,IAAA,IAAIf,EAAI,EAAGA,EAAI1B,EAAM0B,IAAK,CACzBgB,IAAAA,EAAM5C,EAAM4B,GAEhBgB,EAAMC,EAAMD,GACZ5C,EAAM4B,GAAKgB,EAEN,IAAA,IAAIf,EAAI,EAAGA,EAAI1B,EAAS0B,IAAK,CAIhCG,EAHanB,SAASoB,eAAeL,EAAEG,WAAa,IAAMF,EAAEE,YAChD/B,EAAM4B,GAAGC,MAO3B,SAASiB,IACF,IAAA,IAAIlB,EAAI,EAAGA,EAAI1B,EAAM0B,IAAK,CACzBgB,IAAAA,EAAM5C,EAAM4B,GAEhBgB,EAAIG,WACJH,EAAMC,EAAMD,IACRG,UACJ/C,EAAM4B,GAAKgB,EAEN,IAAA,IAAIf,EAAI,EAAGA,EAAI1B,EAAS0B,IAAK,CAIhCG,EAHanB,SAASoB,eAAeL,EAAEG,WAAa,IAAMF,EAAEE,YAChD/B,EAAM4B,GAAGC,MAO3B,SAASmB,IACF,IAAA,IAAInB,EAAI,EAAGA,EAAI1B,EAAS0B,IAAK,CAC5Be,IAAAA,EAAM,CAAC5C,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,IAE3De,EAAMC,EAAMD,GAEP,IAAA,IAAIhB,EAAI,EAAGA,EAAI1B,EAAM0B,IAAK,CAC7B5B,EAAM4B,GAAGC,GAAKe,EAAIhB,GAKlBI,EAHanB,SAASoB,eAAeL,EAAEG,WAAa,IAAMF,EAAEE,YAChD/B,EAAM4B,GAAGC,MAO3B,SAASoB,IACF,IAAA,IAAIpB,EAAI,EAAGA,EAAI1B,EAAS0B,IAAK,CAC5Be,IAAAA,EAAM,CAAC5C,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,GAAI7B,EAAM,GAAG6B,IAE3De,EAAIG,WACJH,EAAMC,EAAMD,IACRG,UAEC,IAAA,IAAInB,EAAI,EAAGA,EAAI1B,EAAM0B,IAAK,CAC7B5B,EAAM4B,GAAGC,GAAKe,EAAIhB,GAKlBI,EAHanB,SAASoB,eAAeL,EAAEG,WAAa,IAAMF,EAAEE,YAChD/B,EAAM4B,GAAGC,MAO3B,SAASgB,EAAMjB,GAGR,IAFDgB,IAAAA,EAAMM,EAAWtB,GAEZuB,EAAI,EAAGA,EAAIP,EAAIJ,OAAS,EAAGW,IAC9BP,EAAIO,KAAOP,EAAIO,EAAI,KACrBP,EAAIO,IAAM,EACVP,EAAIO,EAAI,GAAK,EACblD,GAAS2C,EAAIO,IAKVP,IAFPA,EAAMM,EAAWN,GAEVA,EAAIJ,OAASrC,GAClByC,EAAIQ,KAAK,GAGJR,OAAAA,EAGT,SAASS,EAAazB,GAGf,IAFCgB,IAAAA,EAAMM,EAAWtB,GAEduB,EAAI,EAAGA,EAAIP,EAAIJ,OAAS,EAAGW,IAC9BP,GAAAA,EAAIO,KAAOP,EAAIO,EAAI,GACd,OAAA,EAIJ,OAAA,EAGT,SAASD,EAAWN,GACXA,OAAAA,EAAIU,OAAO,SAAA1B,GAAKA,OAAAA,IAGzB,SAAS2B,IAIF,IAHCC,IAAAA,EAAM,GACNC,EAAS,GAENC,EAAM,EAAGA,EAAMvD,EAASuD,IAC/BF,EAAIJ,KAAK,CAACpD,EAAM,GAAG0D,GAAM1D,EAAM,GAAG0D,GAAM1D,EAAM,GAAG0D,GAAM1D,EAAM,GAAG0D,KAK3DD,OAFPD,EAAI9C,QAAQ,SAAAiD,GAAKF,OAAAA,EAAOL,KAAKC,EAAaM,MAEnCF,EAAOG,KAAK,SAAAjD,GAAMA,OAAAA,IAG3B,SAASkD,IACDJ,IAAAA,EAAS,GAIRA,OAFPzD,EAAMU,QAAQ,SAAAiD,GAAKF,OAAAA,EAAOL,KAAKC,EAAaM,MAErCF,EAAOG,KAAK,SAAAjD,GAAMA,OAAAA,IAG3B,SAASH,EAAcY,EAAOC,GACxBR,SAASC,cAAc,aACzBD,SAASC,cAAc,YAAYI,SAG/B4C,IAAAA,EAAUjD,SAASU,cAAc,KAEvCuC,EAAQtC,UAAUC,IAAI,WACtBqC,EAAQ/C,UAAYK,EACpB0C,EAAQtC,UAAUC,IAAIJ,GACtBR,SAASC,cAAc,sBAAsBa,OAAOmC,GAGtD,SAASC,EAASrB,GACT1C,OAAAA,EAAMgE,IAAI,SAAAL,GAAKA,OAAAA,EAAEC,KAAK,SAAAjD,GAAMA,OAAAA,IAAO+B,MAAQkB,KAAK,SAAAK,GAAKA,OAAAA,IAvS9DzD,EAAc,0CAA2C,iBAyBzDK,SAASC,cAAc,UAAUY,iBAAiB,QAAS,WACzDpB,MAmGFO,SAASa,iBAAiB,QAAS,SAACwC,GACpB,IAAVjE,GACFkB,EAAa,UAAW,WAG1Be,IAEe,cAAXgC,EAAEC,KACJxB,IACoB,eAAXuB,EAAEC,KACXrB,IACoB,YAAXoB,EAAEC,KACXnB,IACoB,cAAXkB,EAAEC,MACXlB,IAGEc,EAAS,MACXvD,EAAc,gCAAiC,gBAK5C+C,KAA2BM,KAA6B1B,KAC3D3B,EAAc,8BAA+B,gBAG/CK,SAASC,cAAc,eAAeC,UAAYd","file":"main.7369bccf.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet board = [];\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nconst winLimit = 2048;\nlet startedGame = false;\n\ncreateMessage('Press \"Start\" to begin game. Good luck!', 'message-start');\n\nfunction startGame() {\n  if (startedGame) {\n    return;\n  }\n  setGame();\n  createMessage('', 'hidden');\n  startedGame = true;\n};\n\nfunction resetGame() {\n  board.forEach(el => el.fill(0, 0, 4));\n  score = 0;\n  document.querySelector('.game-score').innerText = score;\n\n  const cells = document.querySelectorAll('field-cell');\n\n  cells.forEach(cell => cell.remove());\n\n  createMessage('Press \"Start\" to begin game. Good luck!', 'message-start');\n  createButton('Start', 'start');\n  startedGame = false;\n}\n\ndocument.querySelector('.start').addEventListener('click', () => {\n  startGame();\n});\n\nfunction createButton(title, className) {\n  document.querySelector('.button').remove();\n\n  const button = document.createElement('button');\n\n  button.classList.add('button');\n  button.innerText = title;\n  button.classList.add(className);\n\n  button.addEventListener('click', className === 'restart'\n    ? resetGame\n    : startGame);\n\n  document.querySelector('.controls').append(button);\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.createElement('field-cell');\n\n      cell.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateCell(cell, num);\n      document.getElementById('game-field').append(cell);\n    }\n  }\n\n  setTwo();\n  setTwo();\n}\n\nfunction setTwo() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = 2;\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      cell.innerText = '2';\n      cell.classList.add('field-cell--2');\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  if (!board.length) {\n    return;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num;\n\n    if (num < winLimit) {\n      cell.classList.add('field-cell' + '--' + +num.toString());\n    } else {\n      cell.classList.add('field-cell--2048');\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (score === 0) {\n    createButton('Restart', 'restart');\n  }\n\n  setTwo();\n\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n  } else if (e.code === 'ArrowRight') {\n    slideRigth();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n  }\n\n  if (isWinner(2048)) {\n    createMessage('Winner! Congrats! You did it!', 'message-win');\n\n    return;\n  }\n\n  if (!canBeMergedVerticaly() && !canBeMergedHorisontaly() && !hasEmptyCell()) {\n    createMessage('You lose! Restart the game?', 'message-lose');\n  }\n\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideRigth() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction slide(r) {\n  let row = filterZero(r);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction isMergingRow(r) {\n  const row = filterZero(r);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction filterZero(row) {\n  return row.filter(r => r);\n}\n\nfunction canBeMergedVerticaly() {\n  const arr = [];\n  const result = [];\n\n  for (let col = 0; col < columns; col++) {\n    arr.push([board[0][col], board[1][col], board[2][col], board[3][col]]);\n  }\n\n  arr.forEach(b => result.push(isMergingRow(b)));\n\n  return result.some(el => el);\n}\n\nfunction canBeMergedHorisontaly() {\n  const result = [];\n\n  board.forEach(b => result.push(isMergingRow(b)));\n\n  return result.some(el => el);\n}\n\nfunction createMessage(title, className) {\n  if (document.querySelector('.message')) {\n    document.querySelector('.message').remove();\n  }\n\n  const message = document.createElement('p');\n\n  message.classList.add('message');\n  message.innerText = title;\n  message.classList.add(className);\n  document.querySelector('.message-container').append(message);\n}\n\nfunction isWinner(value) {\n  return board.map(b => b.some(el => el === value)).some(w => w);\n}\n"]}